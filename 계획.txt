# PrinSekai 개발 계획서

## 📋 프로젝트 개요
- **프로젝트명**: PrinSekai (프린세카이)
- **장르**: Unity 기반 육성 시뮬레이션 게임
- **목표 완성일**: 2026년 3월
- **현재 상태**: 핵심 시스템 구현 중

---

## 🎯 주요 개발 단계

### Phase 1: 기초 작업
- [x] 기본 게임 구조 설계
- [x] 핵심 시스템 (DataManager, GameManager) 구현
- [ ] **아트 에셋 수급** - 우선순위 높음
- [ ] **상세 기획서 작성** - 게임플레이 플로우 정의

### Phase 2: 핵심 개발
- [ ] 메인 게임플레이 로직 완성
- [ ] UI/UX 시스템 구축
- [ ] 스토리 및 대화 시스템 완성

### Phase 3: 컨텐츠 및 테스트
- [ ] 미니게임 및 추가 컨텐츠 구현
- [ ] 전체 게임 플로우 테스트
- [ ] 버그 수정 및 최적화

---

## 🎮 핵심 컨텐츠 기획

### 1. 스탯 시스템
- **10개 주요 스탯**: 지력, 매력, 기품, 도덕성 등
- **성장 메커니즘**: 월별 활동을 통한 스탯 상승
- **엔딩 분기**: 스탯 조합에 따른 다양한 결말

### 2. 단어 수집 & 대화 시스템
- **단어 수집 메커니즘**: 다양한 활동을 통한 단어 획득
- **대화 시스템 연계**: 수집한 단어를 대화 선택지에 활용
- **호감도 시스템**: 적절한 단어 사용으로 캐릭터 호감도 상승
- **단어 카테고리**: 감정, 취미, 학문, 예술 등 분야별 분류
- **진행도 관리**: 단어 수집 현황 및 사용 이력 추적

### 3. 미니게임 시스템
- **가을 축제 이벤트**: 3가지 미니게임 + 분기 처리
  - 미니게임 1: [기획 중]
  - 미니게임 2: [기획 중] 
  - 미니게임 3: [기획 중]
- **계절별 특별 활동**: 시즌 한정 미니게임

### 4. 추가 컨텐츠 아이디어
- [ ] 계절별 특별 이벤트
- [ ] 숨겨진 엔딩 루트
- [ ] 수집 요소 (도감, 업적 등)

---

## 📅 월별 개발 로드맵

### 2025년 7월
**🎯 목표: 기존 코드 정리 및 달력 시스템 완성**

#### 완료 목표 (7월 중순)
- [ ] **코드 리뷰**: 기존 작성 코드 분석 및 문서화
- [ ] **기능 복기**: 구현했던 기능들 재점검
- [ ] **달력 UI 구현**: 월별 스케줄 관리 시스템
- [ ] **상세 계획 수립**: 다음 단계 구체적 계획

#### 진행 중 (7월 7일 기준)
- [x] **스탯 합산 UI**: 한 달치 스탯 변화 요약 버튼 구현
- [ ] **게임 플로우 테스트**: 시작→끝 전체 루트 동작 확인
- [ ] **단어수집 씬 설계**: UI/UX 구상 및 프로토타입

### 2025년 8월
**🎯 목표: 단어수집 시스템 구현 시작**

#### 계획된 작업
- [ ] **단어수집 씬 개발**: 기본 기능 구현
- [ ] **게임 밸런스 조정**: 스탯 상승률 및 난이도 조절
- [ ] **UI 개선**: 사용자 경험 향상을 위한 인터페이스 개선
- [ ] **중간 테스트**: 핵심 기능들의 통합 테스트

---

## 📝 개발 노트

### 우선순위 체크리스트
1. **아트 에셋 확보** - 게임 완성도에 직결
2. **핵심 게임플레이 루프 완성** - 재미 요소 구현
3. **안정성 확보** - 버그 없는 플레이 경험
4. **컨텐츠 다양성** - 반복 플레이 가치 제공

### 기술적 고려사항
- **Unity C# 기반** 개발 환경 유지
- **Yarn Spinner** 대화 시스템 활용
- **JSON 직렬화** 세이브/로드 시스템
- **코루틴 기반** 애니메이션 처리

---

## 🔧 현재 구현된 기능 현황

### ✅ 완료된 핵심 시스템

#### 1. 데이터 관리 시스템 (DataManager.cs)
- **싱글톤 패턴**: 전역 데이터 관리
- **JSON 저장/로드**: 슬롯별 세이브 시스템 (save1.json, save2.json 등)
- **플레이어 데이터**: 이름, 돈, 결혼상대, 인벤토리 관리
- **스탯 시스템**: 10개 스탯 (지력, 매력, 기품, 도덕성, 명성, 스트레스, 힘, 마력, 신앙, 예술)
- **엔딩 관리**: 완료된 엔딩 저장 및 해금 시스템
- **날짜 시스템**: 년/월/주/일 및 날씨 관리
- **인벤토리 시스템**: 아이템 추가/삭제 기능

#### 2. 게임 매니저 시스템 (GameManager.cs)
- **싱글톤 패턴**: 전역 게임 상태 관리
- **씬 전환**: 안전한 씬 이동 기능
- **UI 연동**: 플레이어 정보 실시간 표시
- **자동 로드**: 게임 시작 시 기본 슬롯 로드

#### 3. 스케줄 시스템 (SchedulePanel.cs)
- **월별 활동 계획**: 28개 활동(4주×7일) 스케줄링
- **확률 기반 성공/실패**: 활동별 성공률 적용
- **Yarn Spinner 연동**: 스케줄 선택 시 대화 시스템 활용
- **다양한 활동**: 13가지 활동 (금기서적, 알바, 발레, 피아노, 마법연구, 검술, 독서, 공연, 기도, 산책, 봉사활동 등)

#### 4. 애니메이션 & 스탯 적용 시스템 (AnimationStatEvent.cs)
- **스케줄 애니메이션**: 28개 활동의 시각적 재생
- **스탯 변화 계산**: 활동별 스탯 증감 적용
- **애니메이션 제어**: 재생 속도 조절, 스킵 기능
- **월 진행**: 자동 날짜 진행 및 년도 전환
- **결과 요약**: 월별 스탯 변화 요약 표시

#### 5. 엔딩 시스템 (EndingCheck.cs)
- **조건부 엔딩**: 스탯 조합에 따른 5가지 엔딩
  - 스타 엔딩 (모든 스탯 고급 + 저스트레스)
  - 마왕 엔딩 (고마력 + 저신앙/도덕성)
  - 폭군 엔딩 (고힘/마력 + 저도덕성)
  - 왕 엔딩 (고기품/지력/도덕성/매력)
  - 기사 엔딩 (고힘/기품/도덕성/매력)
- **엔딩 해금**: 달성한 엔딩 영구 저장

#### 6. 대화 시스템 (Yarn Unity 기반)
- **YarnDataInterAct.cs**: Yarn Spinner와 데이터 연동
- **ConversationEvent.cs**: 대화 이벤트 처리
- **ConversationButton.cs**: 대화 UI 버튼 관리

#### 7. UI 시스템
- **StatPanel.cs**: 현재 스탯 표시
- **StatSumPanel.cs**: 월별 스탯 변화 요약
- **MoneyPanel.cs**: 돈 정보 표시
- **DataPanel.cs**: 플레이어 데이터 UI
- **GalleryButton.cs**: 갤러리 기능

#### 8. 기타 시스템
- **ItemManager.cs**: 아이템 관리 (기본 구조)
- **SceneChanger**: 씬 전환 유틸리티
- **SlotDataGet.cs**: 세이브 슬롯 정보 조회

### 🚧 부분 구현된 기능
- **아이템 시스템**: 기본 구조만 구현, 실제 아이템 사용 로직 필요
- **갤러리 시스템**: UI만 구현, 컨텐츠 연동 필요
- **단어 수집 시스템**: 아직 미구현 (신규 개발 필요)

### 📋 기술적 특징
- **Unity C# 기반**: 객체 지향 설계
- **Yarn Spinner**: 대화 시스템 전문 툴 활용
- **JSON 직렬화**: 크로스 플랫폼 호환 데이터 저장
- **코루틴 활용**: 부드러운 애니메이션 처리
- **싱글톤 패턴**: 안정적인 전역 상태 관리
- **Dictionary 기반**: 효율적인 데이터 구조 활용

---

*최종 수정일: 2025년 7월 7일*
